basePath: /
definitions:
  controller._ResponseCreatePost:
    properties:
      code:
        description: 状态码
        type: string
      message:
        description: 提示信息
        type: string
    type: object
  controller._ResponseLogin:
    properties:
      access_token:
        description: atoken
        type: string
      refresh_token:
        description: rtoken
        type: string
      user_id:
        description: 用户ID
        type: string
      username:
        description: 用户名
        type: string
    type: object
  controller._ResponsePostDetail:
    properties:
      code:
        description: 状态码
        type: string
      data:
        $ref: '#/definitions/models.ApiPostDetail'
        description: 数据
        type: object
      message:
        description: 提示信息
        type: string
    type: object
  controller._ResponsePostList:
    properties:
      code:
        description: 状态码
        type: string
      data:
        description: 数据
        items:
          $ref: '#/definitions/models.ApiPostDetail'
        type: array
      message:
        description: 提示信息
        type: string
    type: object
  models.ApiPostDetail:
    properties:
      author_id:
        example: "0"
        type: string
      author_name:
        type: string
      community_id:
        example: "0"
        type: string
      content:
        type: string
      create_time:
        type: string
      id:
        example: "0"
        type: string
      introduction:
        type: string
      name:
        type: string
      status:
        type: integer
      title:
        type: string
      vote_num:
        type: integer
    required:
    - community_id
    - content
    - title
    type: object
  models.ParamLogin:
    properties:
      password:
        example: "123"
        type: string
      username:
        example: test01
        type: string
    required:
    - password
    - username
    type: object
  models.ParamPostList:
    properties:
      community_id:
        type: integer
      order:
        example: score,time
        type: string
      page:
        type: integer
      size:
        type: integer
    type: object
  models.ParamSignUp:
    properties:
      password:
        type: string
      re_password:
        type: string
      username:
        type: string
    required:
    - password
    - re_password
    - username
    type: object
  models.ParamVoteData:
    properties:
      direction:
        description: Direction 赞成票（1）还是反对票（-1）取消投票（0） 必须要有，只能是1 0 -1 其中一个
        example: 1,0,-1
        type: string
      post_id:
        description: |-
          UserID 从请求中获取当前的用户
          PostID 帖子id
        example: "12184486707990528"
        type: string
    required:
    - post_id
    type: object
  models.Post:
    properties:
      author_id:
        example: "0"
        type: string
      community_id:
        example: "0"
        type: string
      content:
        type: string
      create_time:
        type: string
      id:
        example: "0"
        type: string
      status:
        type: integer
      title:
        type: string
    required:
    - community_id
    - content
    - title
    type: object
host: 127.0.0.1:8081
info:
  contact:
    name: ShaoChong
    url: coder.cc
  description: 使用gin mysql redis 实现的web论坛
  license: {}
  title: GoWeb论坛
  version: "1.0"
paths:
  /api/v1/community:
    get:
      consumes:
      - application/json
      description: 查询到所有的社区 (community_id, community_name) 以列表的形式返回
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: 查询所有社区
      tags:
      - 社区
  /api/v1/community/{id}:
    get:
      consumes:
      - application/json
      description: 描述
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 社区id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: 概况
      tags:
      - 社区
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 登录参数
        in: body
        name: obj
        required: true
        schema:
          $ref: '#/definitions/models.ParamLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponseLogin'
      summary: 登录
      tags:
      - 用户
  /api/v1/post:
    post:
      consumes:
      - application/json
      description: 创建新帖子，存入数据库并在redis中记录该帖子的分数和所处社区
      parameters:
      - description: Bearer JWT_AToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: 参数
        in: body
        name: obj
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponseCreatePost'
      security:
      - ApiKeyAuth: []
      summary: 创建帖子
      tags:
      - 帖子
  /api/v1/post/{id}:
    get:
      consumes:
      - application/json
      description: 通过post id获取post内容以及所所在社区和作者名
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 帖子id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostDetail'
      security:
      - ApiKeyAuth: []
      summary: 通过post id获取post详情
      tags:
      - 帖子
  /api/v1/posts:
    post:
      consumes:
      - application/json
      description: 描述
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: path
        name: page
        type: string
      - description: 页面大小
        in: path
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 概况
      tags:
      - 帖子
  /api/v1/signup:
    post:
      consumes:
      - application/json
      description: 注册
      parameters:
      - description: 用户注册参数
        in: body
        name: obj
        required: true
        schema:
          $ref: '#/definitions/models.ParamSignUp'
      produces:
      - application/json
      responses:
        "200": {}
      summary: 注册
      tags:
      - 用户
  /api/v1/vote:
    post:
      consumes:
      - application/json
      description: 描述
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: Direction 赞成票（1）还是反对票（-1）取消投票（0） 必须要有，只能是1 0 -1 其中一个
        example: 1,0,-1
        in: query
        name: direction
        type: string
      - description: |-
          UserID 从请求中获取当前的用户
          PostID 帖子id
        example: "12184486707990528"
        in: query
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: 给帖子投票
      tags:
      - 帖子
  /api/v2/posts:
    get:
      consumes:
      - application/json
      description: 根据社区id（可以为空）、页码、数量返回分页数据
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: community_id
        type: integer
      - example: score,time
        in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 获取帖子分页数据
      tags:
      - 帖子
swagger: "2.0"
